// C++ code
//
#define A 8
#define B 7
#define C 2
#define D 3
#define E 4
#define F 6
#define G 5
#define LED_CONSTITUCION 13
#define LED_SAN_JUAN 12
#define LED_INDEPENDENCIA 11
#define LED_MORENO 10
#define INTERRUPTOR 9
#define BUZZER A0

int contador = 3;
int botonEncendido = 0;
int buzzer = 0;

void setup()
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E , OUTPUT);
  pinMode(F , OUTPUT);
  pinMode(G , OUTPUT);
  pinMode(LED_CONSTITUCION, OUTPUT);
  pinMode(LED_SAN_JUAN, OUTPUT);
  pinMode(LED_INDEPENDENCIA, OUTPUT);
  pinMode(LED_MORENO, OUTPUT);
  pinMode(BUZZER, INPUT);
  Serial.begin(9600); 
}

void loop()
{
  int intervalo = 1000;
  //Serial.println(digitalRead(INTERRUPTOR));
  //Serial.println(digitalRead(sensor));
  if(digitalRead(INTERRUPTOR)== LOW)
  {
    botonEncendido = !botonEncendido;
    delay(50);
  }
  if(botonEncendido)
  {
    if(contador == 3){
      imprimeDigito(contador); 
      tone(BUZZER, 494, 1000);
      prenderLed(2000, intervalo, LED_CONSTITUCION);
      
    }else
    if(contador == 2){
      imprimeDigito(contador); 
      tone(BUZZER, 494, 1000);
      prenderLed(2000, intervalo, LED_SAN_JUAN);
    }else
    if(contador == 1){
      imprimeDigito(contador); 
      tone(BUZZER, 494, 1000);
      prenderLed(2000, intervalo, LED_INDEPENDENCIA);
    }else
    if(contador == 0){
      imprimeDigito(contador);
      tone(BUZZER, 494, 1000);
      prenderLed(3000, intervalo, LED_MORENO);
      contador = 4;
    }

    contador --;
    botonEncendido = 0;
  }else
  {
    digitalWrite(A, LOW);
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);
    digitalWrite(LED_CONSTITUCION, LOW);
    digitalWrite(LED_SAN_JUAN, LOW);
    digitalWrite(LED_INDEPENDENCIA, LOW);
    digitalWrite(LED_MORENO, LOW);
    contador = 4;
  }
}

void prenderLed(int tiempoEncendido, int tiempoApagado, int ledColor)
{
  digitalWrite(ledColor, HIGH);
  delay(tiempoEncendido);
  digitalWrite(ledColor, LOW);
  delay(tiempoApagado);
}  

void imprimeDigito(int digito) {
  // Tipo de dato byte: cada segmento es un bits por ende con un byte alcanza ya 
  // que un byte son 8 bits y solo necesitamos 7 
  const byte valoresSegmentos[4][7] = {
    {1, 1, 1, 1, 1, 1, 0},  // 0
    {0, 1, 1, 0, 0, 0, 0},  // 1
    {1, 1, 0, 1, 1, 0, 1},  // 2
    {1, 1, 1, 1, 0, 0, 1},  // 3
  };
  
  // Enciende o apaga los segmentos del d√≠gito que paso por param 
  digitalWrite(A, valoresSegmentos[digito][0]);
  digitalWrite(B, valoresSegmentos[digito][1]);
  digitalWrite(C, valoresSegmentos[digito][2]);
  digitalWrite(D, valoresSegmentos[digito][3]);
  digitalWrite(E, valoresSegmentos[digito][4]);
  digitalWrite(F, valoresSegmentos[digito][5]);
  digitalWrite(G, valoresSegmentos[digito][6]);
}
